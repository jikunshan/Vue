{"remainingRequest":"D:\\eclipse-workspace\\html-workspace\\Vue\\node_modules\\babel-loader\\lib\\index.js!D:\\eclipse-workspace\\html-workspace\\Vue\\src\\utils\\util.js","dependencies":[{"path":"D:\\eclipse-workspace\\html-workspace\\Vue\\src\\utils\\util.js","mtime":1592204868792},{"path":"D:\\eclipse-workspace\\html-workspace\\Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591324549952},{"path":"D:\\eclipse-workspace\\html-workspace\\Vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1591324562281}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.keys\";\nimport _typeof from \"D:\\\\eclipse-workspace\\\\html-workspace\\\\Vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.is-array\";\nvar parts = [];\n\nfunction setParamsSerializer(rootKey, params) {\n  if (params === null || typeof params === 'undefined') {\n    return;\n  }\n\n  if (Array.isArray(params)) {\n    params.forEach(function (v, k) {\n      if (rootKey === null || rootKey === 'undefined') {\n        setParamsSerializer('[' + k + ']', params[k]);\n      } else {\n        setParamsSerializer(rootKey + '[' + k + ']', params[k]);\n      }\n    });\n  } else if (_typeof(params) === 'object') {\n    Object.keys(params).forEach(function (key) {\n      if (rootKey === null || rootKey === 'undefined') {\n        setParamsSerializer(key, params[key]);\n      } else {\n        setParamsSerializer(rootKey + '.' + key, params[key]);\n      }\n    });\n  } else {\n    parts.push(rootKey + '=' + params);\n  }\n}\n\n;\nexport function paramsSerializer(params) {\n  parts = [];\n  setParamsSerializer(null, params);\n  return parts.join('&');\n}\nexport default {\n  paramsSerializer: paramsSerializer\n};",{"version":3,"sources":["D:\\eclipse-workspace\\html-workspace\\Vue\\src\\utils\\util.js"],"names":["parts","setParamsSerializer","rootKey","params","Array","isArray","forEach","v","k","Object","keys","key","push","paramsSerializer","join"],"mappings":";;;;;AAAA,IAAIA,KAAK,GAAG,EAAZ;;AAEA,SAASC,mBAAT,CAA6BC,OAA7B,EAAsCC,MAAtC,EAA8C;AAC7C,MAAIA,MAAM,KAAK,IAAX,IAAmB,OAAOA,MAAP,KAAkB,WAAzC,EAAsD;AACrD;AACA;;AACD,MAAIC,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAJ,EAA2B;AAC1BA,IAAAA,MAAM,CAACG,OAAP,CAAe,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACxB,UAAIN,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,WAApC,EAAiD;AAChDD,QAAAA,mBAAmB,CAAC,MAAMO,CAAN,GAAU,GAAX,EAAgBL,MAAM,CAACK,CAAD,CAAtB,CAAnB;AACA,OAFD,MAEO;AACNP,QAAAA,mBAAmB,CAACC,OAAO,GAAG,GAAV,GAAgBM,CAAhB,GAAoB,GAArB,EAA0BL,MAAM,CAACK,CAAD,CAAhC,CAAnB;AACA;AACD,KAND;AAOA,GARD,MAQO,IAAI,QAAOL,MAAP,MAAkB,QAAtB,EAAgC;AACtCM,IAAAA,MAAM,CAACC,IAAP,CAAYP,MAAZ,EAAoBG,OAApB,CAA4B,UAAAK,GAAG,EAAI;AAClC,UAAIT,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,WAApC,EAAiD;AAChDD,QAAAA,mBAAmB,CAACU,GAAD,EAAMR,MAAM,CAACQ,GAAD,CAAZ,CAAnB;AACA,OAFD,MAEO;AACNV,QAAAA,mBAAmB,CAACC,OAAO,GAAG,GAAV,GAAgBS,GAAjB,EAAsBR,MAAM,CAACQ,GAAD,CAA5B,CAAnB;AACA;AAED,KAPD;AAQA,GATM,MASA;AACNX,IAAAA,KAAK,CAACY,IAAN,CAAWV,OAAO,GAAG,GAAV,GAAgBC,MAA3B;AACA;AACD;;AAAA;AAED,OAAO,SAASU,gBAAT,CAA0BV,MAA1B,EAAkC;AACxCH,EAAAA,KAAK,GAAG,EAAR;AACAC,EAAAA,mBAAmB,CAAC,IAAD,EAAOE,MAAP,CAAnB;AACA,SAAOH,KAAK,CAACc,IAAN,CAAW,GAAX,CAAP;AACA;AAED,eAAe;AACdD,EAAAA,gBAAgB,EAAhBA;AADc,CAAf","sourcesContent":["let parts = [];\r\n\r\nfunction setParamsSerializer(rootKey, params) {\r\n\tif (params === null || typeof params === 'undefined') {\r\n\t\treturn;\r\n\t}\r\n\tif (Array.isArray(params)) {\r\n\t\tparams.forEach((v, k) => {\r\n\t\t\tif (rootKey === null || rootKey === 'undefined') {\r\n\t\t\t\tsetParamsSerializer('[' + k + ']', params[k]);\r\n\t\t\t} else {\r\n\t\t\t\tsetParamsSerializer(rootKey + '[' + k + ']', params[k]);\r\n\t\t\t}\r\n\t\t});\r\n\t} else if (typeof params === 'object') {\r\n\t\tObject.keys(params).forEach(key => {\r\n\t\t\tif (rootKey === null || rootKey === 'undefined') {\r\n\t\t\t\tsetParamsSerializer(key, params[key]);\r\n\t\t\t} else {\r\n\t\t\t\tsetParamsSerializer(rootKey + '.' + key, params[key]);\r\n\t\t\t}\r\n\r\n\t\t})\r\n\t} else {\r\n\t\tparts.push(rootKey + '=' + params);\r\n\t}\r\n};\r\n\r\nexport function paramsSerializer(params) {\r\n\tparts = [];\r\n\tsetParamsSerializer(null, params);\r\n\treturn parts.join('&');\r\n}\r\n\r\nexport default {\r\n\tparamsSerializer\r\n}\n"]}]}